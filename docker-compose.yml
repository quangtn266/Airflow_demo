version: "3.7"
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  #Airflow settings
  - AIRFLOW_HOME=/opt/airflow
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTION=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CORE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER_RBAC=False
  - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=True
  # Movielens settings.
  - AIRFLOW_CONN_MOVIELENS=http://airflow:airflow@movielens
  - MOVIELENS_USER=airflow
  - MOVIELENS_PASSWORD=airflow
  - MOVIELENS_HOST=http://movielens:5000
x-airflow-image: &airflow_image apache/airflow:2.7.3-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    container_name: chapter10_kubernetes_postgres_1
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    networks:
      - airflow
  init:
    build:
      context: images/airflow-kubernetes
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-kubernetes
    container_name: chapter10_kubernetes_init_1
    depends_on:
      - postgres
    networks:
      - airflow
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db upgrade && sleep 5 && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
  webserver:
    build:
      context: images/airflow-kubernetes
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-kubernetes
    container_name: chapter10_kubernetes_webserver_1
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    networks:
      - airflow
    environment: *airflow_environment
    command: webserver
  scheduler:
    build:
      context: images/airflow-kubernetes
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-kubernetes
    container_name: chapter10_kubernetes_scheduler-1
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - airflow
    environment: *airflow_environment
    command: scheduler
  movielens:
    build: chapter8/docker/movielens-api
    image: manning-airflow/movielens-api
    container_name: chapter10_kubernetes_movielens_1
    networks:
      - airflow
    ports:
      - "5000:5000"
    environment:
      API_USER: airflow
      API_PASSWORD: airflow

  # These aren't actual services, but we include them to make sure that the
  # corresponding images are built by when pulling up docker-compose.
  movielens-fetch:
    build: images/movielens-fetch-reqs
    image: manning-airflow/movielens-fetch:k8s
    container_name: chatper10_kubernetes_movielens-fetch_1
    restart: "no"
  movielens-rank:
    build: images/movielens-rank
    image: manning-airflow/movielens-rank:k8s
    container_name: chapter10_kubernetes_movielens-rank_1
    restart: "no"

networks:
  airflow:
    name: airflow

volumes:
  logs:
    name: chapter10_kubernetes_logs